import run from './run'
import {
  EndpointDescription,
  ApplicationDescription,
  ApplicationType,
  MessageSecurityMode,
  UserTokenPolicy,
  UserTokenType
} from '../../dist/ua/generated'
import LocalizedText, { LocalizedTextText } from '../../dist/ua/LocalizedText'

describe('EndpointDescription', () => {
  run([
    {
      name: 'normal',
      instance: new EndpointDescription({
        EndpointUrl: 'ep-url',
        Server: new ApplicationDescription({
          ApplicationUri: 'app-uri',
          ProductUri: 'prod-uri',
          ApplicationName: new LocalizedText({
            EncodingMask: LocalizedTextText,
            Text: 'app-name'
          }),
          ApplicationType: ApplicationType.Server,
          GatewayServerUri: 'gw-uri',
          DiscoveryProfileUri: 'prof-uri',
          DiscoveryUrls: ['discov-uri-1', 'discov-uri-2']
        }),
        // ServerCertificate: nil,
        SecurityMode: MessageSecurityMode.None,
        SecurityPolicyUri: 'sec-uri',
        UserIdentityTokens: [
          new UserTokenPolicy({
            PolicyId: '1',
            TokenType: UserTokenType.Anonymous,
            IssuedTokenType: 'issued-token',
            IssuerEndpointUrl: 'issuer-uri',
            SecurityPolicyUri: 'sec-uri'
          }),
          new UserTokenPolicy({
            PolicyId: '1',
            TokenType: UserTokenType.Anonymous,
            IssuedTokenType: 'issued-token',
            IssuerEndpointUrl: 'issuer-uri',
            SecurityPolicyUri: 'sec-uri'
          })
        ],
        TransportProfileUri: 'trans-uri'
      }),
      // prettier-ignore
      bytes: new Uint8Array([
        0x06, 0x00, 0x00, 0x00, 0x65, 0x70, 0x2d,
        0x75, 0x72, 0x6c, 0x07, 0x00, 0x00, 0x00,
        0x61, 0x70, 0x70, 0x2d, 0x75, 0x72, 0x69,
        0x08, 0x00, 0x00, 0x00, 0x70, 0x72, 0x6f,
        0x64, 0x2d, 0x75, 0x72, 0x69, 0x02, 0x08,
        0x00, 0x00, 0x00, 0x61, 0x70, 0x70, 0x2d,
        0x6e, 0x61, 0x6d, 0x65, 0x00, 0x00, 0x00,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x67, 0x77,
        0x2d, 0x75, 0x72, 0x69, 0x08, 0x00, 0x00,
        0x00, 0x70, 0x72, 0x6f, 0x66, 0x2d, 0x75,
        0x72, 0x69, 0x02, 0x00, 0x00, 0x00, 0x0c,
        0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x63,
        0x6f, 0x76, 0x2d, 0x75, 0x72, 0x69, 0x2d,
        0x31, 0x0c, 0x00, 0x00, 0x00, 0x64, 0x69,
        0x73, 0x63, 0x6f, 0x76, 0x2d, 0x75, 0x72,
        0x69, 0x2d, 0x32, 0xff, 0xff, 0xff, 0xff,
        0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x73, 0x65, 0x63, 0x2d, 0x75, 0x72,
        0x69, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00,
        0x0c, 0x00, 0x00, 0x00, 0x69, 0x73, 0x73,
        0x75, 0x65, 0x64, 0x2d, 0x74, 0x6f, 0x6b,
        0x65, 0x6e, 0x0a, 0x00, 0x00, 0x00, 0x69,
        0x73, 0x73, 0x75, 0x65, 0x72, 0x2d, 0x75,
        0x72, 0x69, 0x07, 0x00, 0x00, 0x00, 0x73,
        0x65, 0x63, 0x2d, 0x75, 0x72, 0x69, 0x01,
        0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
        0x00, 0x0c, 0x00, 0x00, 0x00, 0x69, 0x73,
        0x73, 0x75, 0x65, 0x64, 0x2d, 0x74, 0x6f,
        0x6b, 0x65, 0x6e, 0x0a, 0x00, 0x00, 0x00,
        0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x2d,
        0x75, 0x72, 0x69, 0x07, 0x00, 0x00, 0x00,
        0x73, 0x65, 0x63, 0x2d, 0x75, 0x72, 0x69,
        0x09, 0x00, 0x00, 0x00, 0x74, 0x72, 0x61,
        0x6e, 0x73, 0x2d, 0x75, 0x72, 0x69, 0x00,
      ])
    }
  ])
})
